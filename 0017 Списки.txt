# Простой вывод списка
students = ['Ivan', 'Masha', 'Sasha']
for student in students:
    print('Hello, ' + student + '!')

# Операция (+) сложения со списками
students = ['Ivan', 'Masha', 'Sasha']
teachers = ['Oleg', 'Alex']
print(students + teachers)

# Операция (*) умножения со списками
students = ['Ivan', 'Masha', 'Sasha']
teachers = ['Oleg', 'Alex']
print([0,1] * 4)

# Замена в списке
students = ['Ivan', 'Masha', 'Sasha']
print(students)
students[1] = 'Oleg'
print(students)

# Добавление элементов в список
students = ['Ivan', 'Masha', 'Sasha']
students += ['Olga']
students += 'Olga'
print(students)
# Результат: ['Ivan', 'Masha', 'Sasha', 'Olga', 'O', 'l', 'g', 'a']

# Добавление элементов в список (.append)
students = ['Ivan', 'Masha', 'Sasha']
print(students)
students.append('Olga')
print(students)
students += ['Olga']
print(students)
students += ['Boris', 'Sergey']
print(students)
# Обнуление списка
students = []
print(students)

# Вставка элементов в список (.insert)
students = ['Ivan', 'Masha', 'Sasha']
print(students)
students.insert(1, 'Olga')
print(students)

# Удаление элементов из списка (.remove, del)
students = ['Ivan', 'Masha', 'Sasha']
print(students)
students.remove('Sasha') # Удаляется только первое вхождение
print(students)
del students[0]
print(students)

# Проверка наличия элемента в списке
students = ['Ivan', 'Masha', 'Sasha']
if 'Ivan' in students:
    print('Ivan в списке есть')
if 'Ann' not in students: # Можно написать: "if not 'Ann' in students"
    print('Ann в списке нет')

# Проверка наличия и нахождение номера элемента в списке
students = ['Ivan', 'Masha', 'Sasha']
ind = students.index('Sasha')
print(ind)
#ind = students.index('Ann')
#print(ind) # Будет ошибка: "'Ann' is not in list"

# Сортировка списка (sorted, min, max, .sort)
students = ['Sasha', 'Masha', 'Ivan']
ordered_students = sorted(students)
print(ordered_students)
print(min(students))
print(max(students))
students = ['Sasha', 'Masha', 'Ivan']
students.sort()
print(students)

# Выведение списка в обратном порядке (.reverse, reversed, [::-1])
students = ['Sasha', 'Masha', 'Ivan']
students.reverse()
''' Метод reverse перестраивает список, но сам ничего не возвращает.
Для вывода нужно применить метод к списку. А затем уже в print помещать сам измененный список'''
print(students)
###
students = ['Sasha', 'Masha', 'Ivan']
obr_spisok = list(reversed(students)) # reversed(): без list() не жизнеспособна
print(obr_spisok)
###
students = ['Sasha', 'Masha', 'Ivan']
print(students[::-1]) # Выводит список в обратном порядке
###
obr_spisok = students[::-1]
print(obr_spisok)

# Присвоение списков
a = [1, 'A', 2]
b = a
print(a, b)
a[0] = 42
print(a, b)
b[2] = 30
print(a, b)

# Присвоение и изменение списков
a = [1, 2, 3]
b = a
print(a, b)
# значения списка b?
a[1] = 10
print(a, b)
# значения списка b?
b[0] = 20
print(a, b)
# значения списка a?
a = [5, 6]
print(a, b)
# Результат:
# [1, 2, 3] [1, 2, 3]
# [1, 10, 3] [1, 10, 3]
# [20, 10, 3] [20, 10, 3]
# [5, 6] [20, 10, 3]

# Генерация списков
a = [0] * 5
print(a)
###
a = [0 for i in range(5)]
print(a)
# Заполнение списка числами от 0 до 4
a = [i for i in range(5)]
print(a)
# Заполнение списка квадратами чисел
a = [i * i for i in range(5)]
print(a)
# Ввод списка через пробел
a = [str (i) for i in input().split()]
print(a)

# Напишите программу, на вход которой подается одна строка с целыми числами.
# Программа должна вывести сумму этих чисел. Используйте метод split строки.
a = [int (i) for i in input().split()]
summa = 0
for cnt in range(len(a)):
   summa = summa + a[cnt]
print(summa)

### Другое решение
a=[int(i) for i in input().split()]
print(sum(a))

### Решение в одну строку
print(sum(int(i) for i in input().split()))

#

'''Напишите программу, на вход которой подаётся список чисел одной строкой.
Программа должна для каждого элемента этого списка вывести сумму двух его соседей. 
Для элементов списка, являющихся крайними, одним из соседей считается элемент,
находящий на противоположном конце этого списка. Например, если на вход подаётся 
список "1 3 5 6 10", то на выход ожидается список "13 6 9 15 7" (без кавычек).
Если на вход пришло только одно число, надо вывести его же.
Вывод должен содержать одну строку с числами нового списка, разделёнными пробелом.'''
a = [int (i) for i in input().split()]
dlina = (len(a))
if dlina == 1:
    print(a[0])
else:
    nsum = a[1] + a[dlina - 1]
    ksum = a[dlina - 2] +a[0]
    print(nsum, end=' ')
    for i in range(1, dlina - 1):
        print(a[i -1] + a[i + 1], end=' ')
    print(ksum)

# Другое решение
lst= [int(i) for i in input().split()]
if len(lst) == 1:
        print(lst[0])
else:
    for i in range(len(lst)):
        print(lst[i-1] + lst[i+1-len(lst)], end=' ')

#
'''Напишите программу, которая принимает на вход список чисел в одной строке
и выводит на экран в одну строку значения, которые встречаются в нём более одного раза.
Для решения задачи может пригодиться метод sort списка.
Выводимые числа не должны повторяться, порядок их вывода может быть произвольным.'''
a = [int (i) for i in input().split()]

