\n — переход на новую строку;
\t — табуляция;
\r — возврат каретки в начало строки;
\b — возврат каретки на один символ

'''Чтобы вывести список в Python в одну строку без скобок, кавычек и запятых, можно использовать метод join()
для объединения элементов списка в строку. Вот пример кода:'''

# Ваш список
my_list = ['apple', 'banana', 'cherry']
# Преобразование списка в строку и вывод
print(' '.join(my_list))


'''Пример 1: Перевод строки в обычном тексте'''
print("Hello\nWorld!")

Результат:
Hello
World!


'''Пример 2: Использование перевода каретки для форматирования вывода'''
name = "John"
age = 30
print(f"Name: {name}\nAge: {age}")

Результат:
Name: John
Age: 30


Пример 3: Перевод каретки в цикле для вывода каждого элемента с новой строки
fruits = ["apple", "banana", "cherry"]
for fruit in fruits:
    print(fruit, end="\n")
	
Результат:
apple
banana
cherry


Пример 4: Создание многострочной строки
multi_line_string = "This is line 1\nThis is line 2\nThis is line 3"
print(multi_line_string)

Результат:
This is line 1
This is line 2
This is line 3


Пример 5: Перевод каретки в текстовых файлах
with open("example.txt", "w") as file:
    file.write("First line\nSecond line\nThird line")

Результат:
Этот код запишет в файл example.txt три строки с переводом каретки после каждой строки:
Содержимое файла example.txt:
First line
Second line
Third line


Пример 6: Использование \r для возврата каретки в начало строки.
Символ \r используется для возврата каретки в начало строки, что может быть полезно для обновления одной и той же строки на экране.

import time
for i in range(5):
    print(f"Loading {i+1}/5", end="\r")
    time.sleep(1)
	
Результат:
Этот код выводит строку, которая обновляется каждый раз, перезаписывая её без перехода на новую строку.
Вывод (динамически обновляется):
Loading 5/5







